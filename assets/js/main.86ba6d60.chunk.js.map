{"version":3,"sources":["tweets/components.js","lookups/loadTweets.js","App.js","index.js"],"names":["TweetList","newTweets","console","log","useState","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","finalTweets","concat","length","callback","xhttp","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","send","loadTweets","map","tweet","index","key","Tweet","props","className","id","content","action","TweetCreationForm","setNewTweets","tweet_text_ref","React","createRef","onSubmit","event","preventDefault","new_val","current","value","tempNewTweets","unshift","likes","required","ref","placeholder","type","ActionBtn","setLikes","userLike","setuserLike","actionDisplay","display","onClick","App","element","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.86ba6d60.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { loadTweets } from '../lookups'\r\n\r\n\r\n\r\nexport const TweetList = ({ newTweets }) => {\r\n    console.log(newTweets);\r\n\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n\r\n    //componentDidUpdate\r\n    useEffect(() => {\r\n        let finalTweets = [...newTweets].concat(tweetsInit)\r\n        if (finalTweets.length !== tweets.length) {\r\n            setTweets(finalTweets)\r\n        }\r\n    }, [newTweets, tweetsInit, tweets])\r\n\r\n\r\n    //componentDidMount\r\n    useEffect(() => {\r\n        console.log(\"use effect\");\r\n        const mycallback = (response, status) => {\r\n            if (status === 200) {\r\n                const gotTweets = response\r\n                setTweetsInit(gotTweets)\r\n            } else {\r\n                console.log(\"There is an error;probably the django server is not running\");\r\n            }\r\n        }\r\n        loadTweets(mycallback)\r\n    }, [])\r\n\r\n    return <div>{\r\n        tweets.map((tweet, index) =>\r\n            <Tweet key={index} tweet={tweet} />\r\n        )}\r\n    </div>\r\n}\r\n\r\nexport const Tweet = (props) => {\r\n    const { tweet } = props\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{tweet.id}</h5>\r\n                <p className='py-2 my-2 text text-dark bg-white border text-center'> {tweet.content}</p>\r\n                <div className=\"btn btn-group\">\r\n                    <ActionBtn tweet={tweet} action={{ 'type': 'like', 'display': 'Likes' }} />\r\n                    <ActionBtn tweet={tweet} action={{ 'type': 'unlike', 'display': 'Unlike' }} />\r\n                    <ActionBtn tweet={tweet} action={{ 'type': 'retweet', 'display': 'Retweet' }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const TweetCreationForm = (props) => {\r\n\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const tweet_text_ref = React.createRef()\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(event);\r\n        const new_val = tweet_text_ref.current.value\r\n        console.log(new_val)\r\n        tweet_text_ref.current.value = ''\r\n        let tempNewTweets = [...newTweets]\r\n        //change to server side call\r\n        tempNewTweets.unshift({\r\n            content: new_val,\r\n            likes: 0,\r\n            id: 1234\r\n        })\r\n        setNewTweets(tempNewTweets)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"col-8 my-4\">\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <textarea required ref={tweet_text_ref} className=\"form-control\" placeholder='tweet it...'></textarea>\r\n                    <button type='submit' className='btn btn-secondary mt-2'>tweet</button>\r\n                </form>\r\n            </div>\r\n            <TweetList className='mt-10' newTweets={newTweets} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const ActionBtn = ({ tweet, action }) => {\r\n    // states\r\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\r\n    const [userLike, setuserLike] = useState(false)\r\n\r\n    let className = 'btn btn-primary mt-2 mx-2'\r\n    if (action.type === 'retweet')\r\n        className = `btn mt-2 mx-2 btn-outline-info`\r\n\r\n    const actionDisplay = action.display ? action.display : \"action\"\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        console.log(action.type);\r\n        if (action.type === 'like') {\r\n            if (!userLike) {\r\n                //like it\r\n                setLikes(likes + 1)\r\n            }\r\n            else {\r\n                setLikes(likes - 1)\r\n                setuserLike(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n}\r\n","export const loadTweets = (callback) => {\r\n    const xhttp = new XMLHttpRequest()\r\n    const method = 'GET'\r\n    const url = \"http://localhost:8000/api/\"\r\n    const responseType = \"json\"\r\n\r\n    xhttp.responseType = responseType\r\n    xhttp.open(method, url)\r\n    xhttp.onload = function () {\r\n        callback(xhttp.response, xhttp.status)\r\n    }\r\n    xhttp.onerror = (e) => {\r\n        console.log(e);\r\n        callback({\r\n            'm': 'error on request'\r\n        }, 400)\r\n    }\r\n    // console.log(xhttp)\r\n    // trigger the request\r\n    xhttp.send()\r\n}","import React from 'react';\r\n\r\nimport { TweetCreationForm } from './tweets'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TweetCreationForm className='mt-10' />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nimport { TweetCreationForm } from './tweets'\nconst element = document.getElementById(\"tweetme-2\")\nif (element) {\n  ReactDOM.render(<TweetCreationForm />, element)\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}